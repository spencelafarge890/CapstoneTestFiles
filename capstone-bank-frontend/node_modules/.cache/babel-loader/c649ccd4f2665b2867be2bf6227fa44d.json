{"ast":null,"code":"var _jsxFileName = \"/home/matt/MeritAmericaJava/capstone-bank-app/src/components/HomePageComponent.js\";\n//this should have the login form in a container - see wireframes\nimport React, { Component } from 'react';\nimport { Jumbotron, Button, FormGroup, Label, Row, Col } from 'reactstrap';\nimport { Header } from './HeaderComponent';\nimport { Control, Form, Errors } from 'react-redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin(values) {\n    this.toggleModal();\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked); //values.preventDefault();\n\n    const [token, setToken] = useState(null);\n\n    const fetchToken = async () => {\n      process.env.REACT_APP_API_ENDPOINT = 'http://localhost:3000/Authenticate';\n      console.log(process.env.REACT_APP_API_ENDPOINT);\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.username.value,\n          password: this.password.value\n        })\n      };\n      const response = await fetch(process.env.REACT_APP_API_ENDPOINT, requestOptions);\n      const data = await response.json();\n      console.log(data);\n      setToken(data.token);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row row-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-9\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"LET'S ADD A PICTURE!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                model: \"login\",\n                onSubmit: values => this.handleLogin(values),\n                children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"username\",\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                    model: \".username\",\n                    id: \"username\",\n                    name: \"username\",\n                    placeholder: \"Username\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"password\",\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                    model: \".password\",\n                    id: \"password\",\n                    name: \"password\",\n                    placeholder: \"Password\",\n                    className: \"form-control\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Log In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/matt/MeritAmericaJava/capstone-bank-app/src/components/HomePageComponent.js"],"names":["React","Component","Jumbotron","Button","FormGroup","Label","Row","Col","Header","Control","Form","Errors","HomePage","constructor","props","handleLogin","bind","values","toggleModal","alert","username","value","password","remember","checked","token","setToken","useState","fetchToken","process","env","REACT_APP_API_ENDPOINT","console","log","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","render"],"mappings":"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","sourcesContent":["//this should have the login form in a container - see wireframes\nimport React, { Component } from 'react';\nimport {Jumbotron, Button, FormGroup, Label, Row, Col} from 'reactstrap';\nimport {Header} from './HeaderComponent'; \nimport {Control, Form, Errors} from 'react-redux-form';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n    };\n\n    handleLogin(values) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n        //values.preventDefault();\n\n        const [token, setToken] = useState(null);\n        const fetchToken = async () => {\n            process.env.REACT_APP_API_ENDPOINT = 'http://localhost:3000/Authenticate'\n            console.log(process.env.REACT_APP_API_ENDPOINT);\n            const requestOptions = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    username: this.username.value,\n                    password: this.password.value\n                })\n            };\n            const response = await fetch(process.env.REACT_APP_API_ENDPOINT, requestOptions);\n            const data = await response.json();\n            console.log(data);\n            \n            setToken(data.token);              \n        };\n    }\n\n    render () {\n        return(\n            <>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-9\">\n                                <h1>LET'S ADD A PICTURE!</h1>\n                            </div>\n                            <div className=\"col-3\">\n                                <Form model=\"login\" onSubmit={(values) => this.handleLogin(values)}>\n                                    <FormGroup>\n                                        <Label htmlFor=\"username\">Username</Label>\n                                        <Control.text model=\".username\" id=\"username\" name=\"username\" placeholder=\"Username\" className=\"form-control\"/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label htmlFor=\"password\">Password</Label>\n                                        <Control.text model=\".password\" id=\"password\" name=\"password\" placeholder=\"Password\" className=\"form-control\"/>\n                                    </FormGroup>\n                                    <Button>Log In</Button>\n                                </Form>\n                            </div>\n                        </div>    \n                    </div>\n                </Jumbotron>\n            </>\n        );\n    }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}